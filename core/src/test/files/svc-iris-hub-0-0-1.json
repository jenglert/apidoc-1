{
    "base_url": "http://svc-iris-hub/svc-iris-hub/1.0",

    "name": "Iris Hub",

    "description": "Iris Hub provides an API to allow vendor to vendor communication and purchasing. One way to think about the hub is a modern EDI - very simple REST interface to enable purchasing and fulfillment between two vendors.",

    "models": {

        "item": {
            "description": "An item represents a physical or virtual thing that can be purchased.",

            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "vendor", "references": "vendors.guid" },
                { "name": "number", "type": "string", "description": "This is the vendor's unique identifier for this item. The item number is case sensitive." },
                { "name": "quantity", "type": "long", "description": "The number of units that this vendor currently has available for sale.", "required": false },
                { "name": "data", "type": "string", "description": "JSON Document containing extended data about this item.", "required": false }
            ]
        },

        "vendor": {
            "description": "A vendor is one of the main concepts in IRIS HUB. All activity is tied to a vendor.",

            "fields": [
		{ "name": "guid", "type": "uuid", "description": "Uniquely identifies this vendor" },
                { "name": "name", "type": "string", "description": "The name of this vendor - just used as a label for people to read." },
                { "name": "keys", "type": "[string]" }
            ]
        },

        "error_message": {
            "description": "A wrapper containing any error messages where appropriate. Will be commonly used with 4xx HTTP response codes primarily for PUT, POST, and PATCH operations.",
            "fields": [
                { "name": "code", "type": "string", "description": "Unique error code for this validation error" },
                { "name": "messages", "type": "[string]", "description": "Description of what went wrong. Guaranteed to have at least one message, but there can be multiple messages if there are multiple validation errors", "minimum": 1 }
            ]

        }

    },

    "operations": {

        "vendors": [
            {
                "method": "GET",
                "description": "Search all vendors. Results are always paginated.",
                "responses": {
                    "200": { "type": "[vendor]" }
                }
            },

            {
                "method": "GET",
                "path": "/:guid",
                "description": "Retrieve vendor with this guid.",
                "responses": {
                    "200": { "type": "vendor" }
                }
            },

            {
                "method": "POST",
                "parameters": [
                    { "name": "name", "type": "string" }
                ],
                "responses": {
                    "201": { "type": "vendor" },
                    "409": { "type": "error_message" }
                }
            },

            {
                "method": "DELETE",
                "path": "/:guid"
            }
        ],

        "items": [
            {
                "method": "GET",
                "description": "Search all items. Results are always paginated.",
                "parameters": [
                    { "name": "guid", "type": "uuid", "required": false },
                    { "name": "vendor_guid", "type": "uuid", "required": false, "references": "vendors.guid" },
                    { "name": "agreement_guid", "type": "uuid", "required": false, "description": "Fetches items for the fulfilling vendor according to the specific agreement guid.", "references": "agreements.guid" },
                    { "name": "number", "type": "string", "required": false },
                    { "name": "limit", "type": "integer", "default": 50 },
                    { "name": "offset", "type": "integer", "default": 0 }
                ],
                "responses": {
                    "200": { "type": "[item]", "fields": ["guid", "vendor", "number", "quantity"] }
                }
            },
            {
                "method": "GET",
                "path": "/:guid",
                "description": "Gets the detailed view of this item, including the full json document of all of the attributes.",
                "responses": {
                    "200": { "type": "item" }
                }
            },
            {
                "method": "POST",
                "parameters": [
                    { "name": "vendor_guid", "type": "uuid", "references": "vendors.guid" },
                    { "name": "number", "type": "string" },
                    { "name": "quantity", "type": "long", "required": false, "default": 0 }
                ],
                "responses": {
                    "201": { "type": "item" }
                }
            },
            {
                "method": "PUT",
                "path": "/:guid",
                "parameters": [
                    { "name": "guid", "type": "uuid", "references": "items.guid" },
                    { "name": "number", "type": "string" },
                    { "name": "quantity", "type": "long" }
                ],
                "responses": {
                    "200": { "type": "item" }
                }
            },
            {
                "method": "PATCH",
                "description": "Allows an incremental update to an existing item.",
                "path": "/:guid",
                "parameters": [
                    { "name": "guid", "type": "uuid", "references": "items.guid" },
                    { "name": "number", "type": "string" },
                    { "name": "quantity", "type": "long" }
                ],
                "responses": {
                    "200": { "type": "item" }
                }
            },
            {
                "method": "DELETE",
                "path": "/:guid"
            }
        ]
    }
}



