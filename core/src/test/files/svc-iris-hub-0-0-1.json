{
    "base_url": "http://svc-iris-hub/svc-iris-hub/1.0",

    "name": "Iris Hub",

    "description": "Iris Hub provides an API to allow vendor to vendor communication and purchasing. One way to think about the hub is a modern EDI - very simple REST interface to enable purchasing and fulfillment between two vendors.",

    "models": {

        "vendor": {
            "description": "A vendor is one of the main concepts in IRIS HUB. All activity is tied to a vendor.",

            "fields": [
		{ "name": "guid", "type": "uuid", "description": "Uniquely identifies this vendor" },
                { "name": "name", "type": "string", "description": "The name of this vendor - just used as a label for people to read." },
                { "name": "keys", "type": "[string]" }
            ]
        },

        "item": {
            "description": "An item represents a physical or virtual thing that can be purchased.",

            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "vendor", "references": "vendors.guid" },
                { "name": "number", "type": "string", "description": "This is the vendor's unique identifier for this item. The item number is case sensitive." },
                { "name": "quantity", "type": "long", "description": "The number of units that this vendor currently has available for sale.", "required": false },
                { "name": "data", "type": "string", "description": "JSON Document containing extended data about this item.", "required": false }
            ]
        },

        "term": {
            "description": "Represents the terms by which two vendors are transacting. Primary purpose is to capture things like 'NET30' so that both parties can correctly invoice and pay.",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "vendor_guid", "type": "uuid", "references": "vendors.guid" },
                { "name": "code", "type": "string", "description": "An identifier that people at both vendors understand (e.g. NET30)." },
                { "name": "description", "type": "string", "required": false, "description": "Description to help people understand the intent of the terms (e.g. Payment is due 30 days after receipt of invoice)" }
            ]
        },

        "agreement": {
            "description": "An agreement outlines the terms by which two vendors work together.",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this agreement" },
                { "name": "identifier", "type": "string", "description": "A human readable unique identifier for this agreement. Format will be something like IA2014-123456 - IA: Iris Agreement followed by the year followed by a number." },
                { "name": "purchasing_vendor", "references": "vendors.guid", "description": "The vendor that will be purchasing items - i.e. the vendor that will be responsible for creating the Purchases in Iris Hub" },
                { "name": "fulfilling_vendor", "references": "vendors.guid", "description": "The vendor that will be fulfilling items - i.e. the vendor that will be responsible for receiving a shipment request and actually shipping the goods." },
                { "name": "term", "references": "terms.guid", "description": "The specific payment terms in place for this agreement" },
                { "name": "begin_datetime", "type": "date-time-iso8601", "description": "The date on which this agreement goes into effect." },
                { "name": "end_datetime", "type": "date-time-iso8601", "required": false, "description": "The date on which this agreement ends. If not specified, this agreement is considered perpetual and it never ends." },
                { "name": "currency", "type": "string", "description": "Determines the currency in which transactions pertaining to this agreement are made. The value is the 3-character upper case iso4217 code for this currency", "example": "USD or EUR" }
            ]
        },

        "shipment_schedule": {
            "description": "A shipment schedule defines how frequently a vendor would like to ship. A common use case is to ship every week on monday. IRIS will then aggregate pending purchases into a single shipment request on Mondays for the vendor to ship in bulk.",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "vendor", "references": "vendors.guid" },
                { "name": "frequency", "type": "string", "description": "supported values: immediate (e.g. for drop ship orders create shipment requests immediately following purchase), daily (create one shipment request / day), weekly (create one shipment request / week)." },
                { "name": "begin_datetime", "type": "date-time-iso8601", "description": "Date on which to start schedule. For daily/weekly schedules, determines the day of the week on which to generate a shipment request" }
            ]
        },

        "planned_shipment": {
            "description": "A date of the next planned shipment (tied to the closure of the shipment request). It's based on the shipment schedule frequency and begin_datetime",
            "fields": [
                { "name": "datetime", "type": "date-time-iso8601", "description": "The date and time of an upcoming shipment." }
            ]
        },

        "address": {
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely idenfies this address" },
                { "name": "name", "type": "string", "required": false },
                { "name": "line1", "type": "string" },
                { "name": "line2", "type": "string", "required": false },
                { "name": "line3", "type": "string", "required": false },
                { "name": "city", "type": "string", "required": false },
                { "name": "state", "type": "string", "required": false },
                { "name": "postal_code", "type": "string" },
                { "name": "country", "type": "string" },
                { "name": "phone", "type": "string", "required": false }
            ]
        },

        "purchase": {
            "description": "A purchase represents one vendor purchasing one unit of an item from another vendor. In many ERP systems, the purchase will map to the concept of an order item - e.g. one item on an order. IRIS operates solely on the level of line items to provide a simple interface that gracefully handles many of the operational differences that occur in real life including short shipments, split shipments, etc. Each purchase a destination address which represents the recipient of the purchase - i.e. where the item should be delivered.",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "vendor_purchase_number", "type": "string", "description": "Unique identifier in vendor's system for this purchase. This token is used to ensure that a purchase is not duplicated in IRIS" },
                { "name": "agreement", "references": "agreements.guid" },
                { "name": "item", "references": "items.guid" },
                { "name": "price", "type": "decimal", "description": "Price of the item being purchased. Currency is that of the agreement." },
                { "name": "address", "references": "addresses.guid" }
            ]
        },

        "shipment_request": {
            "description": "A shipment request refers to a collection of items that the fulfilling vendor should now ship to a single address, subject to the terms of a single agreement. Conceptually - a shipment request relates to one order that the vendor must now ship - containing at least 1 item in it.",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "agreement", "references": "agreements.guid" },
                { "name": "identifier", "type": "string", "description": "A human readable unique identifier for this shipment request. Format will be something like SR2014-123456 - SR: Shipment Request followed by the year followed by a number." },
                { "name": "address", "references": "addresses.guid" }
            ]
        },

        "shipment_request_item": {
            "description": "Represents the list of items inside one shipment request.",
            "fields": [
                { "name": "shipment_request", "references": "shipment_requests.guid" },
                { "name": "item", "references": "items.guid" },
                { "name": "item_number", "type": "string", "description": "The fulfilling vendor's number" },
                { "name": "quantity", "type": "long", "description": "The quantity requested for this item", "minimum": 1 }
            ]
        },

        "receipt": {
            "description": "A receipt represents a single unit of merchandise that was received.",
            "fields": [
                { "name": "guid", "type": "uuid", "description": "Uniquely identifies this record" },
                { "name": "agreement", "references": "agreements.guid" },
                { "name": "item", "references": "items.guid" },
                { "name": "price", "type": "decimal" },
                { "name": "vendor_receipt_number", "type": "string", "description": "Uniquely identifies this receipt in the vendor system. Main purpose is to guarantee idempotence" }
            ]
        },

        "error_message": {
            "description": "A wrapper containing any error messages where appropriate. Will be commonly used with 4xx HTTP response codes primarily for PUT, POST, and PATCH operations.",
            "fields": [
                { "name": "code", "type": "string", "description": "Unique error code for this validation error" },
                { "name": "messages", "type": "[string]", "description": "Description of what went wrong. Guaranteed to have at least one message, but there can be multiple messages if there are multiple validation errors", "minimum": 1 }
            ]

        }

    },

    "operations": {

        "vendors": [
            {
                "method": "GET",
                "description": "Search all vendors. Results are always paginated.",
                "responses": {
                    "200": { "type": "[vendor]" }
                }
            },

            {
                "method": "GET",
                "path": "/:guid",
                "description": "Retrieve vendor with this guid.",
                "responses": {
                    "200": { "type": "vendor" }
                }
            },

            {
                "method": "POST",
                "parameters": [
                    { "name": "name", "type": "string" }
                ],
                "responses": {
                    "201": { "type": "vendor" },
                    "409": { "type": "error_message" }
                }
            },

            {
                "method": "DELETE",
                "path": "/:guid"
            }
        ],

        "items": [
            {
                "method": "GET",
                "description": "Search all items. Results are always paginated.",
                "parameters": [
                    { "name": "vendor_guid", "type": "uuid", "required": false },
                    { "name": "agreement_guid", "type": "uuid", "required": false, "description": "Fetches items for the fulfilling vendor according to the specific agreement guid." },
                    { "name": "number", "type": "string", "required": false },
                    { "name": "limit", "type": "integer", "default": 50 },
                    { "name": "offset", "type": "integer", "default": 0 }
                ],
                "responses": {
                    "200": { "type": "[item]", "fields": ["guid", "vendor", "number", "quantity"] }
                }
            },
            {
                "method": "GET",
                "path": "/:guid",
                "description": "Gets the detailed view of this item, including the full json document of all of the attributes.",
                "responses": {
                    "200": { "type": "item" }
                }
            },
            {
                "method": "POST",
                "parameters": [
                    { "name": "vendor_guid", "type": "uuid" },
                    { "name": "number", "type": "string" },
                    { "name": "quantity", "type": "long", "required": false, "default": 0 }
                ],
                "responses": {
                    "201": { "type": "item" }
                }
            },
            {
                "method": "PUT",
                "path": "/:guid",
                "parameters": [
                    { "name": "guid", "type": "uuid" },
                    { "name": "number", "type": "string" },
                    { "name": "quantity", "type": "long" }
                ],
                "responses": {
                    "200": { "type": "item" }
                }
            },
            {
                "method": "PATCH",
                "description": "Allows an incremental update to an existing item.",
                "path": "/:guid",
                "parameters": [
                    { "name": "guid", "type": "uuid" },
                    { "name": "number", "type": "string" },
                    { "name": "quantity", "type": "long" }
                ],
                "responses": {
                    "200": { "type": "item" }
                }
            },
            {
                "method": "DELETE",
                "path": "/:guid"
            }
        ],

        "terms": [
            {
                "method": "GET",
                "description": "Search all terms. Results are always paginated.",
                "parameters": [
                    { "name": "vendor_guid", "type": "uuid", "required": false },
                    { "name": "code", "type": "string", "required": false },
                    { "name": "limit", "type": "integer", "default": 50 },
                    { "name": "offset", "type": "integer", "default": 0 }
                ],
                "responses": {
                    "200": { "type": "[term]" }
                }
            },

            {
                "method": "POST",
                "parameters": [
                    { "name": "vendor_guid", "references": "vendors.guid" },
                    { "name": "code", "type": "string" },
                    { "name": "description", "type": "string", "required": false }
                ],
                "responses": {
                    "200": { "type": "term" }
                }
            },

            {
                "method": "DELETE",
                "path": "/:guid"
            }
        ]
    }
}



